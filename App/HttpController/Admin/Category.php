<?php
/**
 * Created by PhpStorm.
 * User: duanfuhao
 * Date: 2018/12/25
 * Time: 18:01
 * 帖子相关操作
 **/

namespace App\HttpController\Admin;

use App\HttpController\Base;
use App\Model\Admin\CategoryModel;
use EasySwoole\Validate\Validate;

class Category extends Base
{

    public $categoryObj = null;
    public $valitor = null;
    public $pagesize = 20;
    public $maxpageno = 7; //页面最多显示页码数
    public $url = "?page=";

    public function onRequest(?string $action): ?bool
    {
        parent::onRequest($action); // TODO: Change the autogenerated stub
        $this->categoryObj = new  CategoryModel();
        $this->valitor = new Validate();
        return true;
    }

    /**
     * 分类列表页数据接口
     * Index constructor.
     */
    public function index()
    {
        $data = $this->searchWhere();
        $data = array_filter($data, function($val){
            return ($val !== null);
        });
        $res = $this->categoryObj->categoryList($data);
        if (!empty($res)) {
            $commenObj = new \App\HttpController\Utility\Commen();
            $res = $commenObj->subTree($res, 0, 1);
            return $this->writeJson(0, 'ok', $res);
        } else {
            return $this->writeJson(1, '获取数据失败', '');
        }
    }

    public function searchWhere() {
        return $data = $this->request()->getRequestParam("parent_id", "status");
    }

    /**
     * 分类添加,编辑页面数据接口
     * 通过反射给类实例属性赋值
     */
    public function categoryAddEdit()
    {
        $posts_array = $this->request()->getRequestParam();
        $comObj = new \App\HttpController\Utility\Commen();
        $posts_array = $comObj->purifierHtml($posts_array);
        if (!$this->checkCategory($posts_array)) {
            return $this->writeJson(1, 'fail', $this->valitor->getError()->__toString());
        }
        $this->categoryObj->getRelectObj($this->categoryObj, $posts_array);
        $data = $this->categoryObj->toArray(null, PostModel::FILTER_NOT_NULL);//转为数组并过滤掉null值
        if (!empty($data['id'])) {
            $res = $this->categoryObj->categoryEdit($data);
        } else {
            $res = $this->categoryObj->categoryAdd($data);
        }
        if (!empty($res)) {
            return $this->writeJson(0, 'ok', $res);
        } else {
            return $this->writeJson(1, '操作数据库失败', '');
        }
    }

    /**
     * @param $data
     * 添加帖子验证规则
     */
    public function checkCategory($data)
    {
        if (!empty($data['id'])) {
            $this->valitor->addColumn('id')->required('id不能为空')->integer('id必须为整型')->min(0, 'id必须大于0');
        }
        $this->valitor->addColumn('parent_id')->required('user_id不能为空')->integer('user_id必须为整型');
        $this->valitor->addColumn('content')->required('title必填')->betweenLen(1, 100, 'title需1-100字符之间');
        return $this->valitor->validate($data);
    }


    public function afterAction(?string $actionName): void
    {
        $this->categoryObj = null;
        $this->valitor = null;
        parent::afterAction($actionName); // TODO: Change the autogenerated stub
    }

}